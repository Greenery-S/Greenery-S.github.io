<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Greenery&#39;s Blog Site</title>
        <link>https://Greenery-S.github.io/posts/</link>
        <description>Recent content in Posts on Greenery&#39;s Blog Site</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 19 May 2024 02:32:11 +0800</lastBuildDate>
        <atom:link href="https://Greenery-S.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>How to Maintain the Site</title>
            <link>https://Greenery-S.github.io/posts/hugo/site-building/how-to-maintain-the-site/</link>
            <pubDate>Sun, 19 May 2024 02:32:11 +0800</pubDate>
            
            <guid>https://Greenery-S.github.io/posts/hugo/site-building/how-to-maintain-the-site/</guid>
            <description>How to Maintain a Blog with Hugo and GitHub GitHub Pages is an excellent platform for hosting blogs. It allows you to maintain your blog using Git, making it particularly suitable for programmers, as most of us are familiar with Git.
Hugo is a great static site generator that lets you create static websites using Markdown files. This method is ideal for programmers since most of us are comfortable with Markdown.</description>
            <content type="html"><![CDATA[<h1 id="how-to-maintain-a-blog-with-hugo-and-github">How to Maintain a Blog with Hugo and GitHub</h1>
<p><a href="https://pages.github.com/">GitHub Pages</a> is an excellent platform for hosting blogs. It allows you to maintain your blog using Git, making it particularly suitable for programmers, as most of us are familiar with Git.</p>
<p><a href="https://gohugo.io/">Hugo</a> is a great static site generator that lets you create static websites using Markdown files. This method is ideal for programmers since most of us are comfortable with Markdown.</p>
<p>This article will teach you how to maintain your blog using Hugo and GitHub.</p>
<h2 id="install-hugo-and-git">Install Hugo and Git</h2>
<p>First, you need to install Hugo and Git. You can install them using the following commands:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Install Hugo</span>
</span></span><span style="display:flex;"><span>brew install hugo
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Install Git</span>
</span></span><span style="display:flex;"><span>brew install git
</span></span></code></pre></div><h2 id="create-two-repositories-on-github">Create Two Repositories on GitHub</h2>
<p>You need to create two repositories on GitHub: one to store the source files of Hugo, and another to store the static website generated by Hugo.</p>
<p>The repository for storing the generated static website should be named <code>&lt;yourname.github.io&gt;</code>. This repository is public and is used to store your Hugo source files.</p>
<h2 id="initialize-the-website-project-locally">Initialize the Website Project Locally</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Initialize the Hugo project</span>
</span></span><span style="display:flex;"><span>hugo new site &lt;site-name&gt;
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initialize the Git project</span>
</span></span><span style="display:flex;"><span>git init
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add the remote repository</span>
</span></span><span style="display:flex;"><span>git remote add origin &lt;your-site-source-repo&gt;
</span></span></code></pre></div><h2 id="create-preview-and-edit-posts">Create, Preview, and Edit Posts</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Create a post</span>
</span></span><span style="display:flex;"><span>hugo new posts/my-first-post.md
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Preview the site</span>
</span></span><span style="display:flex;"><span>hugo server -D
</span></span></code></pre></div><h2 id="change-themes">Change Themes</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Download the theme</span>
</span></span><span style="display:flex;"><span>git submodule add &lt;theme-url&gt; themes/&lt;theme-name&gt;
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Copy the configuration file</span>
</span></span><span style="display:flex;"><span>cp themes/&lt;theme-name&gt;/exampleSite/config.toml .
</span></span></code></pre></div><p>Configuration changes vary by theme, so refer to the theme&rsquo;s documentation. For example, if you&rsquo;re using the &lsquo;hello-friend-ng&rsquo; theme, it is recommended to:</p>
<ul>
<li>Place all posts in the <code>content/posts</code> directory.</li>
<li>Configure the <code>config.toml</code> file to modify the menu:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-toml" data-lang="toml"><span style="display:flex;"><span>[[<span style="color:#a6e22e">menu</span>.<span style="color:#a6e22e">main</span>]]
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">identifier</span> = <span style="color:#e6db74">&#34;about&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">name</span> = <span style="color:#e6db74">&#34;About&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">url</span> = <span style="color:#e6db74">&#34;posts/about&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">weight</span> = <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>[[<span style="color:#a6e22e">menu</span>.<span style="color:#a6e22e">main</span>]]
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">identifier</span> = <span style="color:#e6db74">&#34;site-building&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">name</span> = <span style="color:#e6db74">&#34;Site-building&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">url</span> = <span style="color:#e6db74">&#34;categories/hugo-site-building/&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">weight</span> = <span style="color:#ae81ff">5</span>
</span></span></code></pre></div></li>
</ul>
<h2 id="publish-the-website-to-githubio">Publish the Website to GitHub.io</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Generate the static website</span>
</span></span><span style="display:flex;"><span>hugo
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Commit to GitHub</span>
</span></span><span style="display:flex;"><span>cd public
</span></span><span style="display:flex;"><span>git add .
</span></span><span style="display:flex;"><span>git commit -m <span style="color:#e6db74">&#34;add new post&#34;</span>
</span></span><span style="display:flex;"><span>git push origin master
</span></span></code></pre></div><p>You can then visit <code>https://&lt;yourname&gt;.github.io</code> to see your blog.</p>
<blockquote>
<p>Reference Links:</p>
<ul>
<li><a href="https://cuttontail.blog/blog/create-a-wesite-using-github-pages-and-hugo/">Tutorial</a></li>
</ul>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>About</title>
            <link>https://Greenery-S.github.io/posts/about/</link>
            <pubDate>Sun, 19 May 2024 01:10:01 +0800</pubDate>
            
            <guid>https://Greenery-S.github.io/posts/about/</guid>
            <description>About This Site This site is a blog based on Hugo, mainly used to document my studies and life.
Hugo is a static site generator written in Go. It is incredibly fast and supports Markdown syntax. It uses Go templates, so its usage is quite similar to other generators like Helm.
About Me I am a soon-to-be graduate student. I am studying for a master&amp;rsquo;s degree in Computer Engineering at NUS.</description>
            <content type="html"><![CDATA[<h1 id="about-this-site">About This Site</h1>
<p>This site is a blog based on Hugo, mainly used to document my studies and life.</p>
<p>Hugo is a static site generator written in Go. It is incredibly fast and supports Markdown syntax. It uses Go templates, so its usage is quite similar to other generators like Helm.</p>
<h1 id="about-me">About Me</h1>
<p>I am a soon-to-be graduate student. I am studying for a master&rsquo;s degree in Computer Engineering at NUS. My undergraduate degree is in Computer Science and Technology from a 985 university, where I ranked quite high, but I still feel there is much to learn. I wanted to see the world, so I came to Singapore.</p>

    <img src="/images/author.png"  alt="Hello Friend"  class="center"  style="border-radius: 20px; width: 200px;"  />


<p>Here is my resume:</p>
<ul>
<li><a href="/cv/cven.pdf">Resume PDF</a></li>
</ul>
<h2 id="my-tech-stack">My Tech Stack</h2>
<h3 id="programming-languages">Programming Languages</h3>
<ul>
<li><strong>C/C++</strong>: Used during my undergraduate studies for coursework, but I am not proficient. Recently, I&rsquo;ve been reviewing it on learncpp.com.</li>
<li><strong>Python</strong>: I&rsquo;ve written some data processing, machine learning, deep learning, and reinforcement learning code with Python and worked independently on several research projects. I am fairly familiar with it, though I don&rsquo;t particularly like Python&rsquo;s syntax, as it is not ideal for building reliable projects.</li>
<li><strong>Go</strong>: The first production-level language I mastered. I use it to write backend services, tools, scripts, crawlers, etc. I quite like Go&rsquo;s syntax, concurrency model, standard library, and toolchain.</li>
<li><strong>Java</strong>: Learned object-oriented programming with Java during my undergraduate studies. Bought a course on how2j during my sophomore year but haven&rsquo;t gotten around to it. I believe I could learn it within two weeks if I had the time.</li>
<li><strong>Shell</strong>: Used to write simple scripts for tasks like automated deployment, backups, and cleanup.</li>
<li><strong>JavaScript</strong>: Used for writing simple AJAX. Planning to learn TypeScript and React when I have time.</li>
<li><strong>Rust</strong>: A language I am very eager to learn, though I am hesitant due to job opportunities. I plan to learn it once my situation is more stable.</li>
</ul>
<h3 id="domain-knowledge">Domain Knowledge</h3>
<ul>
<li><strong>Backend Technologies</strong>: Mainly web development, distributed systems, databases, caching, message queues, etc.</li>
<li><strong>Cloud-Native Technologies</strong>: Mainly Kubernetes, Docker, Helm, ArgoCD, Argo Workflow, etc.</li>
<li><strong>Computer Networks</strong>: Mainly TCP/IP, HTTP, HTTPS, WebSocket, etc.</li>
<li><strong>Machine Learning</strong>: Deep learning, reinforcement learning. I&rsquo;ve worked with PyTorch, TensorFlow, Keras, etc.</li>
<li><strong>Data Analysis</strong>: Data processing, data visualization. Proficient with pandas, numpy, matplotlib, seaborn, etc.</li>
</ul>
<h3 id="in-progress">In Progress</h3>
<ul>
<li><strong>Leetcode Algorithms</strong>: Continuously practicing, seems endless&hellip;</li>
<li><strong>Go Projects</strong>: Working on some projects to systematically review Go&rsquo;s syntax and various data components.</li>
<li><strong>Kubernetes</strong>: Currently studying it, hoping to produce some articles about Kubernetes.</li>
<li><strong>C++</strong>: Currently reading, two chapters per week.</li>
<li><strong>Model-based Reinforcement Learning for Industrial Applications</strong>: Working on this project with my professor, almost ready to write a paper.</li>
</ul>
<h2 id="my-life">My Life</h2>
<p>In my spare time, I hang out with friends and recently went to Malaysia for a trip. I enjoy eating, playing games, and reading manga. Anyone else a fan of &ldquo;Baki&rdquo; and &ldquo;Kengan Ashura&rdquo;?</p>
]]></content>
        </item>
        
        <item>
            <title>English in Action</title>
            <link>https://Greenery-S.github.io/posts/english-learning/daily/english-in-action/</link>
            <pubDate>Sun, 19 May 2024 00:07:10 +0800</pubDate>
            
            <guid>https://Greenery-S.github.io/posts/english-learning/daily/english-in-action/</guid>
            <description>English Learning Daily When composing my blog, I initially write in Chinese and then translate the content into English. This approach allows me to practice English more effectively and gain a deeper understanding of the differences between Chinese and English.
While writing the blog, I have the opportunity to learn new English vocabulary and expressions. This method has proven to be highly beneficial for my language learning process.
I analyze the English translations provided by ChatGPT, noting the vocabulary, expressions, and grammar used.</description>
            <content type="html"><![CDATA[<h1 id="english-learning-daily">English Learning Daily</h1>
<p>When composing my blog, I initially write in Chinese and then translate the content into English. This approach allows me to practice English more effectively and gain a deeper understanding of the differences between Chinese and English.</p>
<p>While writing the blog, I have the opportunity to learn new English vocabulary and expressions. This method has proven to be highly beneficial for my language learning process.</p>
<p>I analyze the English translations provided by ChatGPT, noting the vocabulary, expressions, and grammar used. This analytical approach significantly enhances my English learning experience.</p>
<p>The articles in this series are named using the format: 20010203-english-in-blog.md, where 20010203 represents the date, and english-in-blog is the article title.</p>
]]></content>
        </item>
        
        <item>
            <title>Classification</title>
            <link>https://Greenery-S.github.io/posts/hugo/site-building/classification/</link>
            <pubDate>Sat, 18 May 2024 21:10:35 +0800</pubDate>
            
            <guid>https://Greenery-S.github.io/posts/hugo/site-building/classification/</guid>
            <description>Article Classification System The classification of articles is managed by two fields: tags and categories. Tags are used for more casual classifications, such as golang and gopher, while categories are used for more formal topic classifications, such as go-dual-token-blog-system.
The URLs for the lists of tags and categories are /tags/ and /categories/, respectively. These URLs are set in the navigation bar, making it easy to view all tags and categories.</description>
            <content type="html"><![CDATA[<h1 id="article-classification-system">Article Classification System</h1>
<p>The classification of articles is managed by two fields: tags and categories. Tags are used for more casual classifications, such as golang and gopher, while categories are used for more formal topic classifications, such as go-dual-token-blog-system.</p>
<p>The URLs for the lists of tags and categories are /tags/ and /categories/, respectively. These URLs are set in the navigation bar, making it easy to view all tags and categories.</p>
<p>One thing to note is that the default sorting method for these lists is by time, so it is advisable to avoid having too many tags and categories, as this could lead to a cluttered list page.</p>
<h2 id="tags">Tags</h2>
<p>The values for tags can be filled in freely, such as golang and gopher. Any semantic tag can be used. Tags are set in the front matter of markdown files and can have multiple tags.</p>
<p>It is recommended to use singular forms for tags, such as rule instead of rules, to avoid duplicate tags.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">tags</span>:
</span></span><span style="display:flex;"><span>- <span style="color:#ae81ff">golang</span>
</span></span><span style="display:flex;"><span>- <span style="color:#ae81ff">gopher</span>
</span></span><span style="display:flex;"><span>- <span style="color:#ae81ff">hugo</span>
</span></span></code></pre></div><h2 id="categories">Categories</h2>
<p>The values for categories are used for topic classifications, such as go-project-dual-token-blog-system. They are set in the front matter of markdown files.</p>
<p>Categories are hierarchical; for example, go is a primary category, go-project is a secondary category, and go-project-dual-token-blog-system is a tertiary category. Subcategories must include their parent categories. For an article under the go-project-dual-token-blog-system category, the categories field should be filled out as follows:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">categories</span>:
</span></span><span style="display:flex;"><span>- <span style="color:#ae81ff">go</span>
</span></span><span style="display:flex;"><span>- <span style="color:#ae81ff">go-project</span>
</span></span><span style="display:flex;"><span>- <span style="color:#ae81ff">go-project-dual-token-blog-system</span>
</span></span></code></pre></div><p>An article might fall under two main categories; for example, this article could be under both hugo and go main categories. Such dual categorization should be carefully considered and not done haphazardly.</p>
]]></content>
        </item>
        
        <item>
            <title>Two-Year Old Gopher</title>
            <link>https://Greenery-S.github.io/posts/go/two-year-old-gopher/</link>
            <pubDate>Sat, 18 May 2024 20:49:02 +0800</pubDate>
            
            <guid>https://Greenery-S.github.io/posts/go/two-year-old-gopher/</guid>
            <description>A Two-Year Go Language User I started learning Go language in October 2022, and now it has been two years. During this time, I have gained a certain level of understanding of Go and have had some practical experience using it in my work. I&amp;rsquo;d like to share some of my thoughts on Go.
Why Learn Go? I was choosing a technology that would help me establish myself in China’s internet industry.</description>
            <content type="html"><![CDATA[<h1 id="a-two-year-go-language-user">A Two-Year Go Language User</h1>
<p>I started learning Go language in October 2022, and now it has been two years. During this time, I have gained a certain level of understanding of Go and have had some practical experience using it in my work. I&rsquo;d like to share some of my thoughts on Go.</p>
<h2 id="why-learn-go">Why Learn Go?</h2>
<p>I was choosing a technology that would help me establish myself in China’s internet industry. The pandemic had just ended, and recent graduates were saying that the job market for Java was tough and it was hard to find work. As a junior in college, I decided to study abroad, and with two years left until graduation, I was quite confused. I asked my uncle, who is a seasoned programmer, for advice, and he suggested I try Go, which they were also using.</p>
<h2 id="the-long-learning-journey">The Long Learning Journey</h2>
<p>So, I began learning this language. I must thank him because, for a novice programmer, Go is very comfortable to learn. Both Go and Rust, as emerging languages, have very clear learning paths and almost no historical baggage, which is very friendly for beginners.</p>
<p>I learned Go’s syntax, concurrency, some data components’ Go SDKs, and various Go frameworks. I found Go’s concurrency very easy to use, its SDKs quite rich, and its frameworks numerous. I used Go at work to write some small tools and services.</p>
<p>I also attended GoCN&rsquo;s offline event in Beijing, where I met fellow Go enthusiasts. It was the first event after the pandemic, held in Beijing. The day before, I was still in Lhasa, but on a whim, I rushed to Beijing overnight and was kindly hosted by Jiang Da-ge. I was very happy during my time in Beijing.</p>
<p>The star projects of Go are Docker and Kubernetes (K8s), both written in Go. The success of these projects has given Go a prominent place in the cloud computing field, firmly establishing it alongside older, strong languages like Java and C++.</p>
<p>Later, I also studied cloud-native technologies, though I am still in the learning process. I feel I need to study them systematically because I am deeply involved in this field. Go has greatly helped me. I became an intern at TikTok Cloud Infra in Singapore, where I have learned a lot.</p>
<h2 id="the-road-ahead-is-long">The Road Ahead is Long</h2>
<p>Coming to Singapore and working with Go is the best arrangement for me. I may need to continue improving my Go skills, learn more cloud-native technologies, and perhaps study other things as well. But I believe I will keep going until I no longer enjoy this industry.</p>
<p>Of course, becoming a full-time employee from an intern requires significant effort. Given the circumstances, I need to study LeetCode algorithms, general backend technologies with Go, and Kubernetes-centric cloud-native technologies. I may also need to learn other languages and technologies, such as systematically studying C++ or PyTorch, to ensure my employability.</p>
<h2 id="what-will-this-topic-include">What Will This Topic Include?</h2>
<p>Currently, I plan to include some of the general backend knowledge points I have worked on in this Go series. In the near future, this Go series will include at least the following content:</p>
<ul>
<li><strong>Database Series</strong></li>
<li><strong>Message Queue Series</strong></li>
<li><strong>Security and Encryption Series</strong></li>
<li><strong>Network Programming Series</strong></li>
<li>Practice Projects:
<ul>
<li><strong>Blog System</strong>: Actually the predecessor of this website, a monolithic application based on the Gin framework, with all components including MySQL and Redis containerized. The authentication part designed a dual-token mechanism. Maintenance costs were high, so I switched to Hugo.</li>
<li><strong>Lottery System</strong>: This will be a practice project integrating high concurrency techniques.</li>
<li><strong>GPC Framework</strong>: An RPC framework based on Go, where I will implement a simple RPC framework.</li>
<li><strong>Distributed Search System</strong>: A more advanced practice project involving some knowledge of distributed systems.</li>
</ul>
</li>
</ul>
<p>The basic syntax of Go and its concurrency might not be included soon, as they are both very large topics and will take time to organize</p>
]]></content>
        </item>
        
    </channel>
</rss>
